<?php

namespace Puzzle\NewsletterBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * MailRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MailRepository extends EntityRepository
{
	
	/**
	 * Find all scheduled mail with date 
	 * 
	 * @param unknown $currentDate
	 * @param unknown $infDate
	 * @param unknown $categoryId
	 * @return Ambigous <multitype:, \Doctrine\ORM\mixed>
	 */
	public function findValidScheduleMailByDate($currentDate, $infDate, $categoryId)
	{
		return $this->_em
					->createQuery("SELECT m FROM ". $this->_entityName . " m WHERE m.category = :categoryId and m.sendAt <= :current and m.sendAt >= :inf and m.type = 'ONCE'")
					->setParameters(array(':categoryId' => $categoryId, ':current' => $currentDate, ':inf' => $infDate))
					->getResult();
	}
	
	/**
	 * Find all scheduled mails
	 *
	 * @param unknown $currentDate
	 * @param unknown $infDate
	 * @param unknown $categoryId
	 * @return Ambigous <multitype:, \Doctrine\ORM\mixed>
	 */
	public function findValidScheduledMails($categoryId)
	{
		return $this->_em
					->createQuery('SELECT m FROM '. $this->_entityName . ' m WHERE m.category = :categoryId and m.type NOT IN (\'UNAVAILABLE\', \'AUTOMATIC\', \'ONCE\')')
					->setParameter(':categoryId', $categoryId)
					->getResult();
	}
}
